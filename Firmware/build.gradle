apply plugin: 'c'

model {
    platforms {
        arm32 {
            architecture "arm32"
        }
    }

    toolChains {
        crossGcc(Gcc) {
            target 'arm32'

            eachPlatform { tools ->
                tools.cCompiler.executable = 'arm-none-eabi-gcc'
                tools.cppCompiler.executable = 'arm-none-eabi-g++'
                tools.assembler.executable = 'arm-none-eabi-as'
                tools.linker.executable = 'arm-none-eabi-ld'
            }
        }
    }

    components {
        cmsis(NativeLibrarySpec) {
            sources {
                c.source { 
                    srcDirs 'src/cmsis/c/'
                    include '*.c'
                 }
                c.exportedHeaders {
                    srcDirs 'src/cmsis/headers'
                }
            }
        }

        stm_lib(NativeLibrarySpec) {
            sources {
                c.lib library: 'cmsis', linkage: 'static'
                c.source {
                    srcDirs 'src/stm_lib/src'
                    include '*.c'
                }
                c.exportedHeaders {
                    srcDirs 'src/stm_lib/inc'
                }
            }
        }

        opq(NativeExecutableSpec) {
            sources {
                c.lib library: 'cmsis', linkage: 'static'     
                c.lib library: 'stm_lib', linkage: 'static'     
            }
        }

        all {
            targetPlatform 'arm32'

            binaries.all { 
                cCompiler.args '-mcpu=cortex-m4', '-DSTM32F30X', '-mthumb' // + ???????????
            }
        }
    }
}
